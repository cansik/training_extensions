:py:mod:`otx.algorithms.anomaly.adapters.anomalib.data.mvtec`
=============================================================

.. py:module:: otx.algorithms.anomaly.adapters.anomalib.data.mvtec

.. autoapi-nested-parse::

   OTX MVTec Dataset facilitate OTX Anomaly Training.

   License:
       MVTec AD dataset is released under the Creative Commons
       Attribution-NonCommercial-ShareAlike 4.0 International License
       (CC BY-NC-SA 4.0)(https://creativecommons.org/licenses/by-nc-sa/4.0/).

   Reference:
       - Paul Bergmann, Kilian Batzner, Michael Fauser, David Sattlegger, Carsten Steger:
         The MVTec Anomaly Detection Dataset: A Comprehensive Real-World Dataset for
         Unsupervised Anomaly Detection; in: International Journal of Computer Vision
         129(4):1038-1059, 2021, DOI: 10.1007/s11263-020-01400-4.

       - Paul Bergmann, Michael Fauser, David Sattlegger, Carsten Steger: MVTec AD â€”
         A Comprehensive Real-World Dataset for Unsupervised Anomaly Detection;
         in: IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR),
         9584-9592, 2019, DOI: 10.1109/CVPR.2019.00982.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   otx.algorithms.anomaly.adapters.anomalib.data.mvtec.OtxMvtecDataset




.. py:class:: OtxMvtecDataset(path: Union[str, pathlib.Path], split_ratio: float = 0.5, seed: int = 0, create_validation_set: bool = True, task_type: otx.api.entities.model_template.TaskType = TaskType.ANOMALY_CLASSIFICATION)

   Generate OTX MVTec Dataset from the anomaly detection datasets that follows the MVTec format.

   :param path: Path to the MVTec dataset category.
                Defaults to "./datasets/MVTec/bottle".
   :type path: Union[str, Path], optional
   :param split_ratio: Ratio to split normal training images and add to the
                       test set in case test set doesn't contain any normal images.
                       Defaults to 0.5.
   :type split_ratio: float, optional
   :param seed: Random seed to ensure reproducibility when splitting. Defaults to 0.
   :type seed: int, optional
   :param create_validation_set: Create validation set from the test set by splitting
                                 it to half. Default to True.
   :type create_validation_set: bool, optional

   .. rubric:: Examples

   >>> dataset_generator = OtxMvtecDataset()
   >>> dataset = dataset_generator.generate()
   >>> dataset[0].media.numpy.shape
   (900, 900, 3)

   .. py:method:: get_samples() -> pandas.core.frame.DataFrame

      Get MVTec samples.

      Get MVTec samples in a pandas DataFrame. Update the certain columns
      to match the OTX naming terminology. For example, column `split` is
      renamed to `subset`. Labels are also renamed by creating their
      corresponding OTX LabelEntities

      :returns:

                Final list of samples comprising all the required
                    information to create the OTX Dataset.
      :rtype: DataFrame


   .. py:method:: generate() -> otx.api.entities.datasets.DatasetEntity

      Generate OTX Anomaly Dataset.

      :returns: Output OTX Anomaly Dataset from an MVTec
      :rtype: DatasetEntity



