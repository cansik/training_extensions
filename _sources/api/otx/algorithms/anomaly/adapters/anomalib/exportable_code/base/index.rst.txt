:py:mod:`otx.algorithms.anomaly.adapters.anomalib.exportable_code.base`
=======================================================================

.. py:module:: otx.algorithms.anomaly.adapters.anomalib.exportable_code.base

.. autoapi-nested-parse::

   Wrapper for Open Model Zoo for Anomaly tasks.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   otx.algorithms.anomaly.adapters.anomalib.exportable_code.base.AnomalyBase




.. py:class:: AnomalyBase(model_adapter, configuration=None, preload=False)

   Bases: :py:obj:`openvino.model_zoo.model_api.models.SegmentationModel`

   Wrapper for anomaly tasks.

   .. py:attribute:: __model__
      :annotation: = anomaly_base

      

   .. py:method:: parameters()
      :classmethod:

      Dictionary containing model parameters.


   .. py:method:: _normalize(targets: Union[numpy.ndarray, numpy.float32], threshold: Union[numpy.ndarray, float], min_val: Union[numpy.ndarray, float], max_val: Union[numpy.ndarray, float]) -> numpy.ndarray
      :staticmethod:

      Apply min-max normalization and shift the values such that the threshold value is centered at 0.5.



