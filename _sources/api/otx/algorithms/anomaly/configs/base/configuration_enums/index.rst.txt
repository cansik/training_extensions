:py:mod:`otx.algorithms.anomaly.configs.base.configuration_enums`
=================================================================

.. py:module:: otx.algorithms.anomaly.configs.base.configuration_enums

.. autoapi-nested-parse::

   Configuration Enums.

   Enums needed to define the options of selectable parameters in the configurable
   parameter classes.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   otx.algorithms.anomaly.configs.base.configuration_enums.POTQuantizationPreset
   otx.algorithms.anomaly.configs.base.configuration_enums.EarlyStoppingMetrics
   otx.algorithms.anomaly.configs.base.configuration_enums.ModelName
   otx.algorithms.anomaly.configs.base.configuration_enums.ModelBackbone




.. py:class:: POTQuantizationPreset

   Bases: :py:obj:`otx.api.configuration.ConfigurableEnum`

   POT Quantization Preset Enum.

   This Enum represents the quantization preset for post training optimization.

   .. py:attribute:: PERFORMANCE
      :annotation: = Performance

      

   .. py:attribute:: MIXED
      :annotation: = Mixed

      


.. py:class:: EarlyStoppingMetrics

   Bases: :py:obj:`otx.api.configuration.ConfigurableEnum`

   Early Stopping Metric Enum.

   This enum represents the different metrics that can be used for early
   stopping.

   .. py:attribute:: IMAGE_ROC_AUC
      :annotation: = image_AUROC

      

   .. py:attribute:: IMAGE_F1
      :annotation: = image_F1Score

      


.. py:class:: ModelName

   Bases: :py:obj:`otx.api.configuration.ConfigurableEnum`

   Model Name Enum.

   This enum represents the different model architectures for anomaly
   classification.

   .. py:attribute:: STFPM
      :annotation: = stfpm

      

   .. py:attribute:: PADIM
      :annotation: = padim

      


.. py:class:: ModelBackbone

   Bases: :py:obj:`otx.api.configuration.ConfigurableEnum`

   Model Backbone Enum.

   This enum represents the common backbones that can be used with Padim and
   STFPM.

   .. py:attribute:: RESNET18
      :annotation: = resnet18

      

   .. py:attribute:: WIDE_RESNET_50
      :annotation: = wide_resnet50_2

      


