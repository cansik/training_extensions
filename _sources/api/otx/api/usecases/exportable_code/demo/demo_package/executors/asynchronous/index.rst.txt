:py:mod:`otx.api.usecases.exportable_code.demo.demo_package.executors.asynchronous`
===================================================================================

.. py:module:: otx.api.usecases.exportable_code.demo.demo_package.executors.asynchronous

.. autoapi-nested-parse::

   Async executor based on ModelAPI.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   otx.api.usecases.exportable_code.demo.demo_package.executors.asynchronous.AsyncExecutor




.. py:class:: AsyncExecutor(model: otx.api.usecases.exportable_code.demo.demo_package.model_container.ModelContainer, visualizer: otx.api.usecases.exportable_code.visualizers.Visualizer)

   Async inferencer.

   :param model: model for inference
   :param visualizer: visualizer of inference results

   .. py:method:: run(input_stream: Union[int, str], loop: bool = False) -> None

      Async inference for input stream (image, video stream, camera).


   .. py:method:: render_result(results: Tuple[Any, dict]) -> numpy.ndarray

      Render for results of inference.



