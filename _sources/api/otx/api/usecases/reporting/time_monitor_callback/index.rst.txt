:py:mod:`otx.api.usecases.reporting.time_monitor_callback`
==========================================================

.. py:module:: otx.api.usecases.reporting.time_monitor_callback

.. autoapi-nested-parse::

   Time monitor callback module.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   otx.api.usecases.reporting.time_monitor_callback.TimeMonitorCallback




Attributes
~~~~~~~~~~

.. autoapisummary::

   otx.api.usecases.reporting.time_monitor_callback.logger


.. py:data:: logger
   

   

.. py:class:: TimeMonitorCallback(num_epoch: int = 0, num_train_steps: int = 0, num_val_steps: int = 0, num_test_steps: int = 0, epoch_history: int = 5, step_history: int = 50, update_progress_callback: Optional[otx.api.entities.train_parameters.UpdateProgressCallback] = None)

   Bases: :py:obj:`otx.api.usecases.reporting.callback.Callback`

   A callback to monitor the progress of training.

   :param num_epoch: Amount of epochs
   :type num_epoch: int
   :param num_train_steps: amount of training steps per epoch
   :type num_train_steps: int
   :param num_val_steps: amount of validation steps per epoch
   :type num_val_steps: int
   :param num_test_steps: amount of testing steps
   :type num_test_steps: int
   :param epoch_history: Amount of previous epochs to calculate average epoch time over
   :type epoch_history: int
   :param step_history: Amount of previous steps to calculate average steps time over
   :type step_history: int
   :param update_progress_callback: Callback to update progress
   :type update_progress_callback: Optional[UpdateProgressCallback]

   .. py:method:: on_train_batch_begin(batch, logs=None)

      Set the value of current step and start the timer.


   .. py:method:: on_train_batch_end(batch, logs=None)

      Compute average time taken to complete a step.


   .. py:method:: is_stalling() -> bool

      Returns True if the training is stalling.

      Returns True if the current step has taken more than 30 seconds and
      at least 20x more than the average step duration


   .. py:method:: __calculate_average_step()

      Compute average duration taken to complete a step.


   .. py:method:: on_test_batch_begin(batch, logs)

      Set the number of current epoch and start the timer.


   .. py:method:: on_test_batch_end(batch, logs)

      Compute average time taken to complete a step based on a running average of `step_history` steps.


   .. py:method:: on_train_begin(logs=None)

      Sets training to true.


   .. py:method:: on_train_end(logs=None)

      Handles early stopping when the total_steps is greater than the current_step.


   .. py:method:: on_epoch_begin(epoch, logs=None)

      Set the number of current epoch and start the timer.


   .. py:method:: on_epoch_end(epoch, logs=None)

      Computes the average time taken to complete an epoch based on a running average of `epoch_history` epochs.


   .. py:method:: _calculate_average_epoch()


   .. py:method:: get_progress()

      Returns current progress as a percentage.



