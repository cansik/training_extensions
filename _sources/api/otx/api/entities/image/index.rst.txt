:py:mod:`otx.api.entities.image`
================================

.. py:module:: otx.api.entities.image

.. autoapi-nested-parse::

   This module implements the Image entity.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   otx.api.entities.image.Image




.. py:class:: Image(data: Optional[numpy.ndarray] = None, file_path: Optional[str] = None)

   Bases: :py:obj:`otx.api.entities.media.IMedia2DEntity`

   Represents a 2D image.

   The image must be instantiated with either a NumPy array containing the image data
   or a path to an image file.

   :param data: NumPy data.
   :type data: Optional[np.ndarray]
   :param file_path: Path to image file.
   :type file_path: Optional[str]

   .. py:method:: __str__()

      String representation of the image. Returns the image format, name and dimensions.


   .. py:method:: __get_size() -> Tuple[int, int]

      Returns image size.

      :returns: Image size as a (height, width) tuple.
      :rtype: Tuple[int, int]


   .. py:method:: numpy() -> numpy.ndarray
      :property:

      Numpy representation of the image.

      For color images the dimensions are (height, width, color) with RGB color channel order.

      :returns: NumPy representation of the image.
      :rtype: np.ndarray


   .. py:method:: roi_numpy(roi: Optional[otx.api.entities.annotation.Annotation] = None) -> numpy.ndarray

      Obtains the numpy representation of the image for a selection region of interest (roi).

      :param roi: The region of interest can be Rectangle in the relative
                  coordinate system of the full-annotation.
      :type roi: Optional[Annotaiton]

      :returns: Selected region as numpy array.
      :rtype: np.ndarray


   .. py:method:: height() -> int
      :property:

      Returns the height of the image.


   .. py:method:: width() -> int
      :property:

      Returns the width of the image.



