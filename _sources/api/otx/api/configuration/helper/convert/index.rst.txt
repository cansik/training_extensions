:py:mod:`otx.api.configuration.helper.convert`
==============================================

.. py:module:: otx.api.configuration.helper.convert

.. autoapi-nested-parse::

   This module contains the definition for the `convert` function within the configuration helper.

   This function can be used to convert a OTX configuration object to a dictionary or yaml representation.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   otx.api.configuration.helper.convert.serialize_metadata
   otx.api.configuration.helper.convert.parameter_group_to_dict
   otx.api.configuration.helper.convert.convert



Attributes
~~~~~~~~~~

.. autoapisummary::

   otx.api.configuration.helper.convert.ConvertTypeVar


.. py:data:: ConvertTypeVar
   

   

.. py:function:: serialize_metadata(metadata_dict: dict, enum_to_str: bool = True) -> dict

   This function converts Enums in the metadata_dict to their string representation.

   It is used when converting between yaml and python object representation of the configuration.

   :param metadata_dict: Dictionary containing the metadata to convert
   :type metadata_dict: dict
   :param enum_to_str: True to convert enums to their string representation, False to leave them as Enums
   :type enum_to_str: bool


.. py:function:: parameter_group_to_dict(parameter_group: otx.api.configuration.elements.ParameterGroup, enum_to_str: bool = False, values_only: bool = False) -> dict

   Converts an instance of a `ParameterGroup` configuration element to its dictionary representation.

   :param parameter_group: ParameterGroup to convert to dictionary representation
   :type parameter_group: ParameterGroup
   :param enum_to_str: Set to True to convert any Enum fields in the configuration to
                       their string representation.
   :type enum_to_str: bool
   :param values_only: True to keep only the parameter values, and remove all meta
                       data from the output dictionary
   :type values_only: bool

   :returns:

             Nested dictionary with keys and values corresponding to the configuration
                 defined in the instance of `ParameterGroup` for which the `to_dict` method was
                 called.
   :rtype: dict


.. py:function:: convert(config: otx.api.configuration.configurable_parameters.ConfigurableParameters, target: Type[ConvertTypeVar], enum_to_str: bool = False, id_to_str: bool = False, values_only: bool = False) -> ConvertTypeVar

   Convert a configuration object to either a yaml string, a dictionary or an OmegaConf DictConfig object.

   :param config: ConfigurableParameters object to convert
   :type config: ConfigurableParameters
   :param target: target type to convert to. Options are [str, dict, DictConfig]
   :type target: Type[ConvertTypeVar]
   :param enum_to_str: Boolean specifying whether to convert enums within the config
                       to their string representation. For conversion to yaml, enums
                       are automatically converted and this option is disregarded.
   :type enum_to_str: bool
   :param id_to_str: True to convert the id of the configurable parameters to a string
                     representation, False to leave it as an ID object
   :type id_to_str: bool
   :param values_only: True to keep only the parameter values, and remove all meta
                       data from the target output
   :type values_only: bool

   :raises ValueError: if an unsupported conversion target is supplied

   :returns:

             Result of the conversion, the configuration specified in `config` in the
                 representation specified in `target`
   :rtype: ConvertTypeVar


