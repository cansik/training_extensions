:py:mod:`otx.api.configuration.elements.utils`
==============================================

.. py:module:: otx.api.configuration.elements.utils

.. autoapi-nested-parse::

   Utility functions for attr package.

   This module contains utility functions to use with the attr package, concerning for instance parameter validation
   or serialization. They are used within the otx_config_helper or the configuration elements.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   otx.api.configuration.elements.utils.attr_enum_to_str_serializer
   otx.api.configuration.elements.utils._convert_enum_selectable_value
   otx.api.configuration.elements.utils.construct_attr_enum_selectable_converter
   otx.api.configuration.elements.utils.construct_attr_enum_selectable_onsetattr
   otx.api.configuration.elements.utils.construct_attr_value_validator
   otx.api.configuration.elements.utils.construct_attr_selectable_validator
   otx.api.configuration.elements.utils.convert_string_to_id
   otx.api.configuration.elements.utils.attr_strict_int_validator
   otx.api.configuration.elements.utils._validate_and_convert_float
   otx.api.configuration.elements.utils.attr_strict_float_on_setattr
   otx.api.configuration.elements.utils.attr_strict_float_converter



Attributes
~~~~~~~~~~

.. autoapisummary::

   otx.api.configuration.elements.utils.NumericTypeVar
   otx.api.configuration.elements.utils.SelectableTypeVar
   otx.api.configuration.elements.utils.ConfigurableEnumTypeVar


.. py:data:: NumericTypeVar
   

   

.. py:data:: SelectableTypeVar
   

   

.. py:data:: ConfigurableEnumTypeVar
   

   

.. py:function:: attr_enum_to_str_serializer(instance: object, attribute: attr.Attribute, value: Union[enum.Enum, str]) -> str

   This function converts Enums to their string representation.

   It is used when converting between yaml and python object representation of the configuration.
   The function signature matches what is expected by the `attr.asdict` value_serializer argument.

   :param instance: (Unused) The instance of the class that the attribute is attached to.
   :type instance: object
   :param attribute: (unused) The attribute that is being serialized.
   :type attribute: Attribute
   :param value: The value to serialize.
   :type value: Union[Enum, str]

   :returns: The string representation of the value.
   :rtype: str


.. py:function:: _convert_enum_selectable_value(value: Union[str, ConfigurableEnumTypeVar], enum_class: Type[ConfigurableEnumTypeVar]) -> ConfigurableEnumTypeVar

   Helper function that converts the input value to an instance of the correct ConfigurableEnum.

   :param value: input value to convert
   :type value: Union[str, ConfigurableEnumTypeVar]
   :param enum_class: Type of the Enum to convert to
   :type enum_class: Type[ConfigurableEnumTypeVar]

   :returns: Instance of the correct ConfigurableEnum
   :rtype: ConfigurableEnumTypeVar


.. py:function:: construct_attr_enum_selectable_converter(default_value: ConfigurableEnumTypeVar) -> Callable[[Union[str, ConfigurableEnumTypeVar]], ConfigurableEnumTypeVar]

   This function converts an input value to the correct instance of the ConfigurableEnum.

   It is used when initializing a selectable parameter.

   :param default_value: Default value for the selectable
   :type default_value: ConfigurableEnumTypeVar

   :returns:     Function that converts an input value to the correct instance of the ConfigurableEnum.
   :rtype: Callable[[Union[str, ConfigurableEnumTypeVar]], ConfigurableEnumTypeVar]


.. py:function:: construct_attr_enum_selectable_onsetattr(default_value: ConfigurableEnumTypeVar) -> Callable[[otx.api.configuration.elements.parameter_group.ParameterGroup, attr.Attribute, Union[str, ConfigurableEnumTypeVar]], ConfigurableEnumTypeVar]

   This function converts an input value to the correct instance of the ConfigurableEnum.

   It is used when setting a value for a selectable parameter.

   :param default_value: Default value for the enum_selectable.
   :type default_value: ConfigurableEnumTypeVar

   :returns:

             Function that converts an input
                 value to the correct instance of the ConfigurableEnum.
   :rtype: Callable[[Union[str, ConfigurableEnumTypeVar]], ConfigurableEnumTypeVar]


.. py:function:: construct_attr_value_validator(min_value: NumericTypeVar, max_value: NumericTypeVar) -> Callable[[otx.api.configuration.elements.parameter_group.ParameterGroup, attr.Attribute, NumericTypeVar], None]

   Constructs a validator function that is used in the attribute validation of numeric configurable parameters.

   :param min_value: Minimum value for the parameter
   :type min_value: NumericTypeVar
   :param max_value: Maximum value for the parameter
   :type max_value: NumericTypeVar

   :returns: Function that validates the input value.
   :rtype: Callable[[ParameterGroup, Attribute, NumericTypeVar], None]


.. py:function:: construct_attr_selectable_validator(options: List[SelectableTypeVar]) -> Callable[[otx.api.configuration.elements.parameter_group.ParameterGroup, attr.Attribute, SelectableTypeVar], None]

   Constructs a validator function that is used in the attribute validation of selectable configurable parameters.

   :param options: List of valid options for the parameter.
   :type options: List[SelectableTypeVar]

   :returns: Function that validates the input value.
   :rtype: Callable[[ParameterGroup, Attribute, SelectableTypeVar], None]


.. py:function:: convert_string_to_id(id_string: Optional[Union[str, otx.api.entities.id.ID]]) -> otx.api.entities.id.ID

   This function converts an input string representing an ID into an OTX ID object.

   Inputs that are already in the form of an ID are left untouched.

   :param id_string: string, ID or None object that should be converted to an ID.
   :type id_string: Optional[Union[str, ID]]

   :returns: the input as an instance of ID
   :rtype: ID


.. py:function:: attr_strict_int_validator(instance: otx.api.configuration.elements.parameter_group.ParameterGroup, attribute: attr.Attribute, value: int) -> None

   Validates that the value set for an attribute is an integer.

   :param instance: (Unused) ParameterGroup to which the attribute belongs
   :type instance: ParameterGroup
   :param attribute: Attribute for which to validate the value
   :type attribute: Attribute
   :param value: Value to validate
   :type value: int

   :raises TypeError: if the value passed to the validator is not an integer


.. py:function:: _validate_and_convert_float(value: float) -> Optional[float]

   Validate that a value is a float, or a number that can be converted to a float.

   If the value is valid, this method will return the value as float. Otherwise, this
   method returns None

   :param value: Value to validate and convert
   :type value: float

   :returns: The value as a float, or None if the value is not valid
   :rtype: Optional[float]


.. py:function:: attr_strict_float_on_setattr(instance: otx.api.configuration.elements.parameter_group.ParameterGroup, attribute: attr.Attribute, value: float) -> float

   Validate that the value set for an attribute is a float, or a number that can be converted to a float.

   :param instance: ParameterGroup to which the attribute belongs
   :type instance: ParameterGroup
   :param attribute: Attribute for which to validate the value
   :type attribute: Attribute
   :param value: Value to validate
   :type value: float

   :raises TypeError: if the value passed to the validator is not a float or number

   :returns: The value as a float
   :rtype: float


.. py:function:: attr_strict_float_converter(value: float) -> float

   Converts a value to float.

   :param value: value to convert
   :type value: float

   :raises TypeError: if value cannot be converted to float

   :returns: Value as float


